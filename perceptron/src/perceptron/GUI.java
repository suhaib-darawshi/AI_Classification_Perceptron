/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perceptron;

import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author Darawshi
 */
public class GUI extends javax.swing.JFrame {
    
    /**
     * Creates new form GUI
     */
    public class po{
        double x;
        double y;
        int cl;
        public po(){
            
        }
        public po(int n1,int n2,int n3){
            x=n1;
            y=n2;
            cl=n3;
        }
    }
    public ArrayList<po> points = new ArrayList<>();
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    int lx1[]=new int[4];
    int ly1[]=new int[4];
    int lx2[]=new int [4];
    int ly2[]=new int [4];
    public ArrayList<po> p = new ArrayList<>();
    
    private class MapDrawer extends JPanel{
    
    
    private MapDrawer(){
        setBackground(new Color(240,240,240));
        addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e){
                p.add(new po(e.getX(), e.getY(),classes.getSelectedIndex()));
                repaint();
            }
        });
    }
    
    @Override
    public void paintComponent (Graphics g){
        super.paintComponent(g);
        Graphics g2 = (Graphics2D) g;
        g2.setColor(Color.gray);
        for (po p : points){
            if(p.cl==0)
                g2.setColor(Color.BLACK);
            else if(p.cl==1)
                g2.setColor(Color.RED);
            else if(p.cl==2)
                g2.setColor(Color.blue);
            else if(p.cl==3)
                g2.setColor(Color.green);
                
            g2.fillOval((int)p.x,(int) p.y, 5, 5);
            
        }
        
        if(flag){
            for(int i=0;i<ll+1;i++){
                g2.setColor(Color.BLACK);
            g2.drawLine(lx1[i], ly1[i], lx2[i], ly2[i]);
            }
            
        }
    }
}
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jj = new MapDrawer();
        classes = new javax.swing.JComboBox<>();
        insert = new javax.swing.JButton();
        it = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lr = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        epochs = new javax.swing.JLabel();
        fcns = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jj.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jj.setPreferredSize(new java.awt.Dimension(280, 300));
        jj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jjMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jjLayout = new javax.swing.GroupLayout(jj);
        jj.setLayout(jjLayout);
        jjLayout.setHorizontalGroup(
            jjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );
        jjLayout.setVerticalGroup(
            jjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        classes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ClassA", "ClassB", "ClassC", "ClassD" }));

        insert.setText("Put Button");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        jLabel1.setText("Max Iterations");

        jLabel2.setText("Learning Rate");

        jButton1.setText("Start Learning");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        epochs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fcns.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "step", "sign", "sigmoid", "linear" }));

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(insert, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                .addComponent(classes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(it)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10))
                            .addComponent(lr)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(fcns, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(epochs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insert)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addComponent(classes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(it, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(fcns, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(epochs, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public double step(double x){
        if(x>0)return 1;
        return 0;
    }
    public double sign(double x){
        if(x>0)return 1;
        return -1;
    }
    public double sigmoid(double x){
        double e=1+Math.pow(Math.E, 0-x);
        e=1/e;
        return e;
    }
    public double linear(double x){
        return x;
    }
    public void fline(double w0,double w1,double w2){
        if(w0==0&&w1==0)
            
            return;
        if(w0==0){
            lx1[ll]=0;
            ly1[ll]=(int) (w2/-w1);
            lx2[ll]=280;
            ly2[ll]=(int) (w2/-w1);
            jj.repaint();
            return;
        }
        else if(w1==0){
            lx1[ll]=(int) (-w2/w1);
            ly1[ll]=0;
            lx2[ll]=(int) (-w2/w1);;
            ly2[ll]=300;
            flag=true;
            jj.repaint();
            return;
        }
            //w0x+w1y+w2=0
        double slope = -w0/w1;
        //double slope = -(w0/w2)/(w0/w1);
        double intercept = -w2/w1;
        int intt=(int) ((double)-intercept/slope);
        int y=(int) intercept;
        lx1[ll]=(int) (-w2/w0);
        ly1[ll]=0;
        lx2[ll]=280;
        ly2[ll]=(int) (y+slope*lx2[ll]);
        //epochs.setText(epochs.getText()+"+"+String.valueOf(lx1)+String.valueOf(lx2)+String.valueOf(ly1)+String.valueOf(ly2)+"+"+String.valueOf(w0)+String.valueOf(w1)+String.valueOf(w2));
        /*if(lx1>280){
            lx1=280;
            ly1=(int) (slope*280+y);
        }
        
        if(ly2>300){
            ly2=300;
            lx2=(int) ((ly2-y)/slope);
        }
        */
        flag=true;
        
        jj.repaint();
    }
    boolean flag=false;
    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_insertActionPerformed
    int c0=0;
    int c1=0;
    int c2=0;
    int c3=0;
    
    private void jjMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jjMousePressed
        // TODO add your handling code here:
        int a =evt.getX();
        int b=evt.getY();
        int cla=classes.getSelectedIndex();
        if(cla==0)
            c0=1;
        else if(cla==1)
            c1=1;
        else if(cla==2)
            c2=1;
        else if(cla==3)
            c3=1;
        po p=new po(a,b,cla);
        points.add(p);
    }//GEN-LAST:event_jjMousePressed
    double l;
    int x;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if("".equals(lr.getText())){
            JOptionPane.showMessageDialog(rootPane, "Please Enter the max number of epochs");
        }
        else if("".equals(it.getText())){
            
            JOptionPane.showMessageDialog(rootPane,"Please set the learning rate");
        }
        else{
            l=Double.parseDouble(lr.getText());
        l=l%100;
        l=l/100;
        int m=Integer.parseInt(it.getText());
        x=c0+c1+c2+c3;
        ll=0;
        double w0=0,w1=0,w2=0;
        int f=fcns.getSelectedIndex();
        int miss=0;double tmp=0;
        double yd=0;
        double ya;
        double e=0;
        double sse;
        double sum=0;
        for(int k=0;k<x-1;k++){
            for(int i=0;i<m;i++){
                miss=0;
                for(int j=0;j<points.size();j++){
                    tmp=(points.get(j).x*w0)+(points.get(j).y*w1+w2-l);
                    /*yd=1==points.get(j).cl?1:-1;*/
                    if(k==points.get(j).cl) 
                        yd=1;
                    else 
                        yd=-1;
                    ya =switch (f) {
                        case 0 -> step(tmp);
                        case 1 -> sign(tmp);
                        case 2 -> sigmoid(tmp);
                        default -> linear(tmp);
                    };
                    
                    boolean h=switch (f) {
                        case 0 -> ya!=step(yd);
                        case 1 -> ya!=yd;
                        case 2 -> ya!=sigmoid(yd);
                        default -> ya!=linear(yd);
                    };
                    if(h){
                        miss++;
                        e=yd-ya;
                        sum+=Math.pow(e, 2);
                        
                        w0=w0+(e*l*points.get(j).x);
                        w1=w1+(e*l*points.get(j).y);
                        w2=w2+(e*l);
                        epochs.setText("Last Weights :"+String.valueOf((int)w0)+"  "+String.valueOf((int)w1)+"   "+String.valueOf((int)w2));
                        fline(w0,w1,w2);
                    }
                    
                    
                }
                sse=sum/points.size();
                
                 if(miss==0){
                    epochs.setText("Epouchs : "+String.valueOf(i+1));
                    
                    fline(w0,w1,w2);
                    ll++;
                    
                    break;
                }
                    
                
        }
        }
        }
       
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        c0=0;
        c1=0;
        c2=0;
        c3=0;
        p.removeAll(p);
        points.removeAll(points);
        ll=0;
        jj.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed
int ll=0;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> classes;
    private javax.swing.JLabel epochs;
    private javax.swing.JComboBox<String> fcns;
    private javax.swing.JButton insert;
    private javax.swing.JTextField it;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JPanel jj;
    private javax.swing.JTextField lr;
    // End of variables declaration//GEN-END:variables
}
